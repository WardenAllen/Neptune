// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.5.1
// source: Pluto.proto

package Pluto

import (
	proto "github.com/golang/protobuf/proto"
	_ "github.com/golang/protobuf/ptypes/any"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type PLUTO_ID int32

const (
	PLUTO_ID_PlutoNone PLUTO_ID = 0
	//服务器连接请求
	PLUTO_ID_ConnectReqID PLUTO_ID = 10001
	//服务器连接确认
	PLUTO_ID_ConnectAckID          PLUTO_ID = 10002
	PLUTO_ID_BannedPlayerReqID     PLUTO_ID = 20000
	PLUTO_ID_BannedPlayerAckID     PLUTO_ID = 20001
	PLUTO_ID_GaggedPlayerReqID     PLUTO_ID = 20002
	PLUTO_ID_GaggedPlayerAckID     PLUTO_ID = 20003
	PLUTO_ID_RemovePlayerRankReqID PLUTO_ID = 20004
	PLUTO_ID_RemovePlayerRankAckID PLUTO_ID = 20005
	PLUTO_ID_GetOnlinePlayersReqID PLUTO_ID = 20006
	PLUTO_ID_GetOnlinePlayersAckID PLUTO_ID = 20007
	PLUTO_ID_NewMailReqID          PLUTO_ID = 20008
	PLUTO_ID_NewMailAckID          PLUTO_ID = 20009
	PLUTO_ID_CDKeyReqID            PLUTO_ID = 20010
	PLUTO_ID_CDKeyAckID            PLUTO_ID = 20011
	PLUTO_ID_OnlineNumReqID        PLUTO_ID = 21000
	PLUTO_ID_OnlineNumAckID        PLUTO_ID = 21001
	PLUTO_ID_SyncStatReqID         PLUTO_ID = 21002
	PLUTO_ID_SyncStatAckID         PLUTO_ID = 21003
	PLUTO_ID_PayStatReqID          PLUTO_ID = 21004
	PLUTO_ID_PayStatAckID          PLUTO_ID = 21005
	PLUTO_ID_OrderReqID            PLUTO_ID = 22000
	PLUTO_ID_OrderAckID            PLUTO_ID = 22001
	PLUTO_ID_PayCallbackReqID      PLUTO_ID = 22002
	PLUTO_ID_PayCallbackAckID      PLUTO_ID = 22003
)

// Enum value maps for PLUTO_ID.
var (
	PLUTO_ID_name = map[int32]string{
		0:     "PlutoNone",
		10001: "ConnectReqID",
		10002: "ConnectAckID",
		20000: "BannedPlayerReqID",
		20001: "BannedPlayerAckID",
		20002: "GaggedPlayerReqID",
		20003: "GaggedPlayerAckID",
		20004: "RemovePlayerRankReqID",
		20005: "RemovePlayerRankAckID",
		20006: "GetOnlinePlayersReqID",
		20007: "GetOnlinePlayersAckID",
		20008: "NewMailReqID",
		20009: "NewMailAckID",
		20010: "CDKeyReqID",
		20011: "CDKeyAckID",
		21000: "OnlineNumReqID",
		21001: "OnlineNumAckID",
		21002: "SyncStatReqID",
		21003: "SyncStatAckID",
		21004: "PayStatReqID",
		21005: "PayStatAckID",
		22000: "OrderReqID",
		22001: "OrderAckID",
		22002: "PayCallbackReqID",
		22003: "PayCallbackAckID",
	}
	PLUTO_ID_value = map[string]int32{
		"PlutoNone":             0,
		"ConnectReqID":          10001,
		"ConnectAckID":          10002,
		"BannedPlayerReqID":     20000,
		"BannedPlayerAckID":     20001,
		"GaggedPlayerReqID":     20002,
		"GaggedPlayerAckID":     20003,
		"RemovePlayerRankReqID": 20004,
		"RemovePlayerRankAckID": 20005,
		"GetOnlinePlayersReqID": 20006,
		"GetOnlinePlayersAckID": 20007,
		"NewMailReqID":          20008,
		"NewMailAckID":          20009,
		"CDKeyReqID":            20010,
		"CDKeyAckID":            20011,
		"OnlineNumReqID":        21000,
		"OnlineNumAckID":        21001,
		"SyncStatReqID":         21002,
		"SyncStatAckID":         21003,
		"PayStatReqID":          21004,
		"PayStatAckID":          21005,
		"OrderReqID":            22000,
		"OrderAckID":            22001,
		"PayCallbackReqID":      22002,
		"PayCallbackAckID":      22003,
	}
)

func (x PLUTO_ID) Enum() *PLUTO_ID {
	p := new(PLUTO_ID)
	*p = x
	return p
}

func (x PLUTO_ID) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PLUTO_ID) Descriptor() protoreflect.EnumDescriptor {
	return file_Pluto_proto_enumTypes[0].Descriptor()
}

func (PLUTO_ID) Type() protoreflect.EnumType {
	return &file_Pluto_proto_enumTypes[0]
}

func (x PLUTO_ID) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PLUTO_ID.Descriptor instead.
func (PLUTO_ID) EnumDescriptor() ([]byte, []int) {
	return file_Pluto_proto_rawDescGZIP(), []int{0}
}

type TA_ID int32

const (
	TA_ID_TA_NONE                           TA_ID = 0
	TA_ID_TA_EVENT_CREATE_ACCOUNT           TA_ID = 1
	TA_ID_TA_EVENT_CREATE_ROLE              TA_ID = 2
	TA_ID_TA_EVENT_LOGIN                    TA_ID = 3
	TA_ID_TA_EVENT_LOGOUT                   TA_ID = 4
	TA_ID_TA_EVENT_GUIDE_FINISH             TA_ID = 100
	TA_ID_TA_EVENT_LEVEL_UP                 TA_ID = 101
	TA_ID_TA_EVENT_MAIN_LEVEL_START_BATTLE  TA_ID = 102
	TA_ID_TA_EVENT_MAIN_LEVEL_FINISH_BATTLE TA_ID = 103
	TA_ID_TA_EVENT_GET_ITEM                 TA_ID = 200
	TA_ID_TA_EVENT_USE_ITEM                 TA_ID = 201
	TA_ID_TA_EVENT_GET_GOLD                 TA_ID = 202
	TA_ID_TA_EVENT_USE_GOLD                 TA_ID = 203
	TA_ID_TA_EVENT_GET_DIAMOND              TA_ID = 204
	TA_ID_TA_EVENT_USE_DIAMOND              TA_ID = 205
	TA_ID_TA_EVENT_GET_CURRENCY             TA_ID = 206
	TA_ID_TA_EVENT_USE_CURRENCY             TA_ID = 207
	TA_ID_TA_EVENT_CREATE_GUILD             TA_ID = 300
	TA_ID_TA_EVENT_JOIN_GUILD               TA_ID = 301
	TA_ID_TA_EVENT_QUIT_GUILD               TA_ID = 302
	TA_ID_TA_EVENT_CREATE_ORDER             TA_ID = 400 // 发起充值
	TA_ID_TA_EVENT_FINISH_ORDER             TA_ID = 401 // 充值完成
	TA_ID_TA_EVENT_GET_WEAPON               TA_ID = 500
	TA_ID_TA_EVENT_WEAPON_STAR_UP           TA_ID = 501
	TA_ID_TA_EVENT_WEAPON_RANK_UP           TA_ID = 502
	TA_ID_TA_EVENT_OPEN_WEAPON_CHEST        TA_ID = 600
	TA_ID_TA_PROPERTY_MAIN_LEVEL            TA_ID = 1000
	TA_ID_TA_PROPERTY_HERO_CP               TA_ID = 1001
	TA_ID_TA_PROPERTY_FRIEND_NUM            TA_ID = 1002
	TA_ID_TA_PROPERTY_GOLD                  TA_ID = 1003
	TA_ID_TA_PROPERTY_DIAMOND               TA_ID = 1004
	TA_ID_TA_PROPERTY_USER_LEVEL            TA_ID = 1005
	TA_ID_TA_PROPERTY_ITEM_LIST             TA_ID = 1006
	TA_ID_TA_PROPERTY_PAY_AMOUNT            TA_ID = 1007
	TA_ID_TA_PROPERTY_LOGIN_DAYS            TA_ID = 1008
	TA_ID_TA_PROPERTY_ROLE_CREATE_TIME      TA_ID = 1009
	TA_ID_TA_PROPERTY_ACCOUNT_CREATE_TIME   TA_ID = 1010
	TA_ID_TA_PROPERTY_FIRST_CHARGE_TIME     TA_ID = 1011
	TA_ID_TA_PROPERTY_LAST_LOGIN_TIME       TA_ID = 1012
	TA_ID_TA_PROPERTY_LAST_CHARGE_TIME      TA_ID = 1013
	TA_ID_TA_PROPERTY_PLATFORM_ID           TA_ID = 1014
	TA_ID_TA_PROPERTY_CHANNEL_ID            TA_ID = 1015
	TA_ID_TA_PROPERTY_FIRST_CHARGE_AMOUNT   TA_ID = 1016
	TA_ID_TA_PROPERTY_SERVER_ID             TA_ID = 1017
	TA_ID_TA_PROPERTY_REGISTER_IP           TA_ID = 1018
	TA_ID_TA_PROPERTY_USER_ID               TA_ID = 1019
	TA_ID_TA_PROPERTY_ROLE_NAME             TA_ID = 1020
)

// Enum value maps for TA_ID.
var (
	TA_ID_name = map[int32]string{
		0:    "TA_NONE",
		1:    "TA_EVENT_CREATE_ACCOUNT",
		2:    "TA_EVENT_CREATE_ROLE",
		3:    "TA_EVENT_LOGIN",
		4:    "TA_EVENT_LOGOUT",
		100:  "TA_EVENT_GUIDE_FINISH",
		101:  "TA_EVENT_LEVEL_UP",
		102:  "TA_EVENT_MAIN_LEVEL_START_BATTLE",
		103:  "TA_EVENT_MAIN_LEVEL_FINISH_BATTLE",
		200:  "TA_EVENT_GET_ITEM",
		201:  "TA_EVENT_USE_ITEM",
		202:  "TA_EVENT_GET_GOLD",
		203:  "TA_EVENT_USE_GOLD",
		204:  "TA_EVENT_GET_DIAMOND",
		205:  "TA_EVENT_USE_DIAMOND",
		206:  "TA_EVENT_GET_CURRENCY",
		207:  "TA_EVENT_USE_CURRENCY",
		300:  "TA_EVENT_CREATE_GUILD",
		301:  "TA_EVENT_JOIN_GUILD",
		302:  "TA_EVENT_QUIT_GUILD",
		400:  "TA_EVENT_CREATE_ORDER",
		401:  "TA_EVENT_FINISH_ORDER",
		500:  "TA_EVENT_GET_WEAPON",
		501:  "TA_EVENT_WEAPON_STAR_UP",
		502:  "TA_EVENT_WEAPON_RANK_UP",
		600:  "TA_EVENT_OPEN_WEAPON_CHEST",
		1000: "TA_PROPERTY_MAIN_LEVEL",
		1001: "TA_PROPERTY_HERO_CP",
		1002: "TA_PROPERTY_FRIEND_NUM",
		1003: "TA_PROPERTY_GOLD",
		1004: "TA_PROPERTY_DIAMOND",
		1005: "TA_PROPERTY_USER_LEVEL",
		1006: "TA_PROPERTY_ITEM_LIST",
		1007: "TA_PROPERTY_PAY_AMOUNT",
		1008: "TA_PROPERTY_LOGIN_DAYS",
		1009: "TA_PROPERTY_ROLE_CREATE_TIME",
		1010: "TA_PROPERTY_ACCOUNT_CREATE_TIME",
		1011: "TA_PROPERTY_FIRST_CHARGE_TIME",
		1012: "TA_PROPERTY_LAST_LOGIN_TIME",
		1013: "TA_PROPERTY_LAST_CHARGE_TIME",
		1014: "TA_PROPERTY_PLATFORM_ID",
		1015: "TA_PROPERTY_CHANNEL_ID",
		1016: "TA_PROPERTY_FIRST_CHARGE_AMOUNT",
		1017: "TA_PROPERTY_SERVER_ID",
		1018: "TA_PROPERTY_REGISTER_IP",
		1019: "TA_PROPERTY_USER_ID",
		1020: "TA_PROPERTY_ROLE_NAME",
	}
	TA_ID_value = map[string]int32{
		"TA_NONE":                           0,
		"TA_EVENT_CREATE_ACCOUNT":           1,
		"TA_EVENT_CREATE_ROLE":              2,
		"TA_EVENT_LOGIN":                    3,
		"TA_EVENT_LOGOUT":                   4,
		"TA_EVENT_GUIDE_FINISH":             100,
		"TA_EVENT_LEVEL_UP":                 101,
		"TA_EVENT_MAIN_LEVEL_START_BATTLE":  102,
		"TA_EVENT_MAIN_LEVEL_FINISH_BATTLE": 103,
		"TA_EVENT_GET_ITEM":                 200,
		"TA_EVENT_USE_ITEM":                 201,
		"TA_EVENT_GET_GOLD":                 202,
		"TA_EVENT_USE_GOLD":                 203,
		"TA_EVENT_GET_DIAMOND":              204,
		"TA_EVENT_USE_DIAMOND":              205,
		"TA_EVENT_GET_CURRENCY":             206,
		"TA_EVENT_USE_CURRENCY":             207,
		"TA_EVENT_CREATE_GUILD":             300,
		"TA_EVENT_JOIN_GUILD":               301,
		"TA_EVENT_QUIT_GUILD":               302,
		"TA_EVENT_CREATE_ORDER":             400,
		"TA_EVENT_FINISH_ORDER":             401,
		"TA_EVENT_GET_WEAPON":               500,
		"TA_EVENT_WEAPON_STAR_UP":           501,
		"TA_EVENT_WEAPON_RANK_UP":           502,
		"TA_EVENT_OPEN_WEAPON_CHEST":        600,
		"TA_PROPERTY_MAIN_LEVEL":            1000,
		"TA_PROPERTY_HERO_CP":               1001,
		"TA_PROPERTY_FRIEND_NUM":            1002,
		"TA_PROPERTY_GOLD":                  1003,
		"TA_PROPERTY_DIAMOND":               1004,
		"TA_PROPERTY_USER_LEVEL":            1005,
		"TA_PROPERTY_ITEM_LIST":             1006,
		"TA_PROPERTY_PAY_AMOUNT":            1007,
		"TA_PROPERTY_LOGIN_DAYS":            1008,
		"TA_PROPERTY_ROLE_CREATE_TIME":      1009,
		"TA_PROPERTY_ACCOUNT_CREATE_TIME":   1010,
		"TA_PROPERTY_FIRST_CHARGE_TIME":     1011,
		"TA_PROPERTY_LAST_LOGIN_TIME":       1012,
		"TA_PROPERTY_LAST_CHARGE_TIME":      1013,
		"TA_PROPERTY_PLATFORM_ID":           1014,
		"TA_PROPERTY_CHANNEL_ID":            1015,
		"TA_PROPERTY_FIRST_CHARGE_AMOUNT":   1016,
		"TA_PROPERTY_SERVER_ID":             1017,
		"TA_PROPERTY_REGISTER_IP":           1018,
		"TA_PROPERTY_USER_ID":               1019,
		"TA_PROPERTY_ROLE_NAME":             1020,
	}
)

func (x TA_ID) Enum() *TA_ID {
	p := new(TA_ID)
	*p = x
	return p
}

func (x TA_ID) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TA_ID) Descriptor() protoreflect.EnumDescriptor {
	return file_Pluto_proto_enumTypes[1].Descriptor()
}

func (TA_ID) Type() protoreflect.EnumType {
	return &file_Pluto_proto_enumTypes[1]
}

func (x TA_ID) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TA_ID.Descriptor instead.
func (TA_ID) EnumDescriptor() ([]byte, []int) {
	return file_Pluto_proto_rawDescGZIP(), []int{1}
}

type PlutoConnectReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerID uint32 `protobuf:"varint,2,opt,name=ServerID,proto3" json:"ServerID,omitempty"`
}

func (x *PlutoConnectReq) Reset() {
	*x = PlutoConnectReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Pluto_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlutoConnectReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlutoConnectReq) ProtoMessage() {}

func (x *PlutoConnectReq) ProtoReflect() protoreflect.Message {
	mi := &file_Pluto_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlutoConnectReq.ProtoReflect.Descriptor instead.
func (*PlutoConnectReq) Descriptor() ([]byte, []int) {
	return file_Pluto_proto_rawDescGZIP(), []int{0}
}

func (x *PlutoConnectReq) GetServerID() uint32 {
	if x != nil {
		return x.ServerID
	}
	return 0
}

type PlutoConnectAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     int32  `protobuf:"varint,2,opt,name=Code,proto3" json:"Code,omitempty"`
	ServerID uint32 `protobuf:"varint,3,opt,name=ServerID,proto3" json:"ServerID,omitempty"`
}

func (x *PlutoConnectAck) Reset() {
	*x = PlutoConnectAck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Pluto_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlutoConnectAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlutoConnectAck) ProtoMessage() {}

func (x *PlutoConnectAck) ProtoReflect() protoreflect.Message {
	mi := &file_Pluto_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlutoConnectAck.ProtoReflect.Descriptor instead.
func (*PlutoConnectAck) Descriptor() ([]byte, []int) {
	return file_Pluto_proto_rawDescGZIP(), []int{1}
}

func (x *PlutoConnectAck) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *PlutoConnectAck) GetServerID() uint32 {
	if x != nil {
		return x.ServerID
	}
	return 0
}

type BannedPlayerReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID     uint64 `protobuf:"varint,1,opt,name=userID,proto3" json:"userID,omitempty"`
	Bannedtime int32  `protobuf:"varint,2,opt,name=bannedtime,proto3" json:"bannedtime,omitempty"`
}

func (x *BannedPlayerReq) Reset() {
	*x = BannedPlayerReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Pluto_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BannedPlayerReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BannedPlayerReq) ProtoMessage() {}

func (x *BannedPlayerReq) ProtoReflect() protoreflect.Message {
	mi := &file_Pluto_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BannedPlayerReq.ProtoReflect.Descriptor instead.
func (*BannedPlayerReq) Descriptor() ([]byte, []int) {
	return file_Pluto_proto_rawDescGZIP(), []int{2}
}

func (x *BannedPlayerReq) GetUserID() uint64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *BannedPlayerReq) GetBannedtime() int32 {
	if x != nil {
		return x.Bannedtime
	}
	return 0
}

type BannedPlayerAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error      int32  `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	UserID     uint64 `protobuf:"varint,2,opt,name=userID,proto3" json:"userID,omitempty"`
	Bannedtime int32  `protobuf:"varint,3,opt,name=bannedtime,proto3" json:"bannedtime,omitempty"`
}

func (x *BannedPlayerAck) Reset() {
	*x = BannedPlayerAck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Pluto_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BannedPlayerAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BannedPlayerAck) ProtoMessage() {}

func (x *BannedPlayerAck) ProtoReflect() protoreflect.Message {
	mi := &file_Pluto_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BannedPlayerAck.ProtoReflect.Descriptor instead.
func (*BannedPlayerAck) Descriptor() ([]byte, []int) {
	return file_Pluto_proto_rawDescGZIP(), []int{3}
}

func (x *BannedPlayerAck) GetError() int32 {
	if x != nil {
		return x.Error
	}
	return 0
}

func (x *BannedPlayerAck) GetUserID() uint64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *BannedPlayerAck) GetBannedtime() int32 {
	if x != nil {
		return x.Bannedtime
	}
	return 0
}

type RemovePlayerRankReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID uint64 `protobuf:"varint,1,opt,name=userID,proto3" json:"userID,omitempty"`
}

func (x *RemovePlayerRankReq) Reset() {
	*x = RemovePlayerRankReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Pluto_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemovePlayerRankReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemovePlayerRankReq) ProtoMessage() {}

func (x *RemovePlayerRankReq) ProtoReflect() protoreflect.Message {
	mi := &file_Pluto_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemovePlayerRankReq.ProtoReflect.Descriptor instead.
func (*RemovePlayerRankReq) Descriptor() ([]byte, []int) {
	return file_Pluto_proto_rawDescGZIP(), []int{4}
}

func (x *RemovePlayerRankReq) GetUserID() uint64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

type RemovePlayerRankAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error  int32  `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	UserID uint64 `protobuf:"varint,2,opt,name=userID,proto3" json:"userID,omitempty"`
}

func (x *RemovePlayerRankAck) Reset() {
	*x = RemovePlayerRankAck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Pluto_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemovePlayerRankAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemovePlayerRankAck) ProtoMessage() {}

func (x *RemovePlayerRankAck) ProtoReflect() protoreflect.Message {
	mi := &file_Pluto_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemovePlayerRankAck.ProtoReflect.Descriptor instead.
func (*RemovePlayerRankAck) Descriptor() ([]byte, []int) {
	return file_Pluto_proto_rawDescGZIP(), []int{5}
}

func (x *RemovePlayerRankAck) GetError() int32 {
	if x != nil {
		return x.Error
	}
	return 0
}

func (x *RemovePlayerRankAck) GetUserID() uint64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

type OnlinePlayerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID     uint64 `protobuf:"varint,1,opt,name=userID,proto3" json:"userID,omitempty"`
	RoleName   string `protobuf:"bytes,2,opt,name=roleName,proto3" json:"roleName,omitempty"`
	Account    string `protobuf:"bytes,3,opt,name=account,proto3" json:"account,omitempty"`
	Level      int32  `protobuf:"varint,4,opt,name=level,proto3" json:"level,omitempty"`
	Gold       uint32 `protobuf:"varint,5,opt,name=gold,proto3" json:"gold,omitempty"`
	WeaponExp  uint32 `protobuf:"varint,6,opt,name=weaponExp,proto3" json:"weaponExp,omitempty"`
	Diamond    uint32 `protobuf:"varint,7,opt,name=diamond,proto3" json:"diamond,omitempty"`
	CreateTime int32  `protobuf:"varint,8,opt,name=createTime,proto3" json:"createTime,omitempty"`
}

func (x *OnlinePlayerInfo) Reset() {
	*x = OnlinePlayerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Pluto_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnlinePlayerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnlinePlayerInfo) ProtoMessage() {}

func (x *OnlinePlayerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_Pluto_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnlinePlayerInfo.ProtoReflect.Descriptor instead.
func (*OnlinePlayerInfo) Descriptor() ([]byte, []int) {
	return file_Pluto_proto_rawDescGZIP(), []int{6}
}

func (x *OnlinePlayerInfo) GetUserID() uint64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *OnlinePlayerInfo) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

func (x *OnlinePlayerInfo) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *OnlinePlayerInfo) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *OnlinePlayerInfo) GetGold() uint32 {
	if x != nil {
		return x.Gold
	}
	return 0
}

func (x *OnlinePlayerInfo) GetWeaponExp() uint32 {
	if x != nil {
		return x.WeaponExp
	}
	return 0
}

func (x *OnlinePlayerInfo) GetDiamond() uint32 {
	if x != nil {
		return x.Diamond
	}
	return 0
}

func (x *OnlinePlayerInfo) GetCreateTime() int32 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

type GetOnlinePlayersReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetOnlinePlayersReq) Reset() {
	*x = GetOnlinePlayersReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Pluto_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOnlinePlayersReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOnlinePlayersReq) ProtoMessage() {}

func (x *GetOnlinePlayersReq) ProtoReflect() protoreflect.Message {
	mi := &file_Pluto_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOnlinePlayersReq.ProtoReflect.Descriptor instead.
func (*GetOnlinePlayersReq) Descriptor() ([]byte, []int) {
	return file_Pluto_proto_rawDescGZIP(), []int{7}
}

type GetOnlinePlayersAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OnlinePlayers []*OnlinePlayerInfo `protobuf:"bytes,2,rep,name=onlinePlayers,proto3" json:"onlinePlayers,omitempty"`
}

func (x *GetOnlinePlayersAck) Reset() {
	*x = GetOnlinePlayersAck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Pluto_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOnlinePlayersAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOnlinePlayersAck) ProtoMessage() {}

func (x *GetOnlinePlayersAck) ProtoReflect() protoreflect.Message {
	mi := &file_Pluto_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOnlinePlayersAck.ProtoReflect.Descriptor instead.
func (*GetOnlinePlayersAck) Descriptor() ([]byte, []int) {
	return file_Pluto_proto_rawDescGZIP(), []int{8}
}

func (x *GetOnlinePlayersAck) GetOnlinePlayers() []*OnlinePlayerInfo {
	if x != nil {
		return x.OnlinePlayers
	}
	return nil
}

type AwardItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemID  int32 `protobuf:"varint,1,opt,name=itemID,proto3" json:"itemID,omitempty"`
	ItemNum int32 `protobuf:"varint,2,opt,name=itemNum,proto3" json:"itemNum,omitempty"`
}

func (x *AwardItem) Reset() {
	*x = AwardItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Pluto_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AwardItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AwardItem) ProtoMessage() {}

func (x *AwardItem) ProtoReflect() protoreflect.Message {
	mi := &file_Pluto_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AwardItem.ProtoReflect.Descriptor instead.
func (*AwardItem) Descriptor() ([]byte, []int) {
	return file_Pluto_proto_rawDescGZIP(), []int{9}
}

func (x *AwardItem) GetItemID() int32 {
	if x != nil {
		return x.ItemID
	}
	return 0
}

func (x *AwardItem) GetItemNum() int32 {
	if x != nil {
		return x.ItemNum
	}
	return 0
}

type NewMailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title       string       `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Text        string       `protobuf:"bytes,3,opt,name=text,proto3" json:"text,omitempty"`
	DeleteType  int32        `protobuf:"varint,4,opt,name=deleteType,proto3" json:"deleteType,omitempty"`
	DeleteParam int32        `protobuf:"varint,5,opt,name=deleteParam,proto3" json:"deleteParam,omitempty"`
	AccountType int32        `protobuf:"varint,6,opt,name=accountType,proto3" json:"accountType,omitempty"`
	UserIDs     []uint64     `protobuf:"varint,7,rep,packed,name=userIDs,proto3" json:"userIDs,omitempty"`
	Awards      []*AwardItem `protobuf:"bytes,8,rep,name=awards,proto3" json:"awards,omitempty"`
}

func (x *NewMailReq) Reset() {
	*x = NewMailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Pluto_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewMailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewMailReq) ProtoMessage() {}

func (x *NewMailReq) ProtoReflect() protoreflect.Message {
	mi := &file_Pluto_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewMailReq.ProtoReflect.Descriptor instead.
func (*NewMailReq) Descriptor() ([]byte, []int) {
	return file_Pluto_proto_rawDescGZIP(), []int{10}
}

func (x *NewMailReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *NewMailReq) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *NewMailReq) GetDeleteType() int32 {
	if x != nil {
		return x.DeleteType
	}
	return 0
}

func (x *NewMailReq) GetDeleteParam() int32 {
	if x != nil {
		return x.DeleteParam
	}
	return 0
}

func (x *NewMailReq) GetAccountType() int32 {
	if x != nil {
		return x.AccountType
	}
	return 0
}

func (x *NewMailReq) GetUserIDs() []uint64 {
	if x != nil {
		return x.UserIDs
	}
	return nil
}

func (x *NewMailReq) GetAwards() []*AwardItem {
	if x != nil {
		return x.Awards
	}
	return nil
}

type NewMailAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *NewMailAck) Reset() {
	*x = NewMailAck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Pluto_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewMailAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewMailAck) ProtoMessage() {}

func (x *NewMailAck) ProtoReflect() protoreflect.Message {
	mi := &file_Pluto_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewMailAck.ProtoReflect.Descriptor instead.
func (*NewMailAck) Descriptor() ([]byte, []int) {
	return file_Pluto_proto_rawDescGZIP(), []int{11}
}

type CdkeyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CDKey  string `protobuf:"bytes,1,opt,name=CDKey,proto3" json:"CDKey,omitempty"`
	UserID uint64 `protobuf:"varint,2,opt,name=UserID,proto3" json:"UserID,omitempty"`
}

func (x *CdkeyReq) Reset() {
	*x = CdkeyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Pluto_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CdkeyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CdkeyReq) ProtoMessage() {}

func (x *CdkeyReq) ProtoReflect() protoreflect.Message {
	mi := &file_Pluto_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CdkeyReq.ProtoReflect.Descriptor instead.
func (*CdkeyReq) Descriptor() ([]byte, []int) {
	return file_Pluto_proto_rawDescGZIP(), []int{12}
}

func (x *CdkeyReq) GetCDKey() string {
	if x != nil {
		return x.CDKey
	}
	return ""
}

func (x *CdkeyReq) GetUserID() uint64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

type CdkeyAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   int32        `protobuf:"varint,1,opt,name=Error,proto3" json:"Error,omitempty"`
	CDKey   string       `protobuf:"bytes,2,opt,name=CDKey,proto3" json:"CDKey,omitempty"`
	UserID  uint64       `protobuf:"varint,3,opt,name=UserID,proto3" json:"UserID,omitempty"`
	KeyType int32        `protobuf:"varint,4,opt,name=KeyType,proto3" json:"KeyType,omitempty"`
	Awards  []*AwardItem `protobuf:"bytes,5,rep,name=Awards,proto3" json:"Awards,omitempty"`
}

func (x *CdkeyAck) Reset() {
	*x = CdkeyAck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Pluto_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CdkeyAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CdkeyAck) ProtoMessage() {}

func (x *CdkeyAck) ProtoReflect() protoreflect.Message {
	mi := &file_Pluto_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CdkeyAck.ProtoReflect.Descriptor instead.
func (*CdkeyAck) Descriptor() ([]byte, []int) {
	return file_Pluto_proto_rawDescGZIP(), []int{13}
}

func (x *CdkeyAck) GetError() int32 {
	if x != nil {
		return x.Error
	}
	return 0
}

func (x *CdkeyAck) GetCDKey() string {
	if x != nil {
		return x.CDKey
	}
	return ""
}

func (x *CdkeyAck) GetUserID() uint64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *CdkeyAck) GetKeyType() int32 {
	if x != nil {
		return x.KeyType
	}
	return 0
}

func (x *CdkeyAck) GetAwards() []*AwardItem {
	if x != nil {
		return x.Awards
	}
	return nil
}

type OnlineNumReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerID  uint32 `protobuf:"varint,1,opt,name=ServerID,proto3" json:"ServerID,omitempty"`
	OnlineNum int32  `protobuf:"varint,2,opt,name=OnlineNum,proto3" json:"OnlineNum,omitempty"`
}

func (x *OnlineNumReq) Reset() {
	*x = OnlineNumReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Pluto_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnlineNumReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnlineNumReq) ProtoMessage() {}

func (x *OnlineNumReq) ProtoReflect() protoreflect.Message {
	mi := &file_Pluto_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnlineNumReq.ProtoReflect.Descriptor instead.
func (*OnlineNumReq) Descriptor() ([]byte, []int) {
	return file_Pluto_proto_rawDescGZIP(), []int{14}
}

func (x *OnlineNumReq) GetServerID() uint32 {
	if x != nil {
		return x.ServerID
	}
	return 0
}

func (x *OnlineNumReq) GetOnlineNum() int32 {
	if x != nil {
		return x.OnlineNum
	}
	return 0
}

type OnlineNumAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *OnlineNumAck) Reset() {
	*x = OnlineNumAck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Pluto_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnlineNumAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnlineNumAck) ProtoMessage() {}

func (x *OnlineNumAck) ProtoReflect() protoreflect.Message {
	mi := &file_Pluto_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnlineNumAck.ProtoReflect.Descriptor instead.
func (*OnlineNumAck) Descriptor() ([]byte, []int) {
	return file_Pluto_proto_rawDescGZIP(), []int{15}
}

type PayStatReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account string `protobuf:"bytes,1,opt,name=Account,proto3" json:"Account,omitempty"`
	IP      uint32 `protobuf:"varint,2,opt,name=IP,proto3" json:"IP,omitempty"`
	OrderID string `protobuf:"bytes,3,opt,name=OrderID,proto3" json:"OrderID,omitempty"`
	Amount  int32  `protobuf:"varint,4,opt,name=Amount,proto3" json:"Amount,omitempty"`
	PayID   int32  `protobuf:"varint,5,opt,name=PayID,proto3" json:"PayID,omitempty"`
}

func (x *PayStatReq) Reset() {
	*x = PayStatReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Pluto_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayStatReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayStatReq) ProtoMessage() {}

func (x *PayStatReq) ProtoReflect() protoreflect.Message {
	mi := &file_Pluto_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayStatReq.ProtoReflect.Descriptor instead.
func (*PayStatReq) Descriptor() ([]byte, []int) {
	return file_Pluto_proto_rawDescGZIP(), []int{16}
}

func (x *PayStatReq) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *PayStatReq) GetIP() uint32 {
	if x != nil {
		return x.IP
	}
	return 0
}

func (x *PayStatReq) GetOrderID() string {
	if x != nil {
		return x.OrderID
	}
	return ""
}

func (x *PayStatReq) GetAmount() int32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *PayStatReq) GetPayID() int32 {
	if x != nil {
		return x.PayID
	}
	return 0
}

type PayStatAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PayStatAck) Reset() {
	*x = PayStatAck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Pluto_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayStatAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayStatAck) ProtoMessage() {}

func (x *PayStatAck) ProtoReflect() protoreflect.Message {
	mi := &file_Pluto_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayStatAck.ProtoReflect.Descriptor instead.
func (*PayStatAck) Descriptor() ([]byte, []int) {
	return file_Pluto_proto_rawDescGZIP(), []int{17}
}

type OrderReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerID    uint32 `protobuf:"varint,1,opt,name=ServerID,proto3" json:"ServerID,omitempty"`       // 服务器ID
	UserID      uint64 `protobuf:"varint,2,opt,name=UserID,proto3" json:"UserID,omitempty"`           // 玩家ID
	PayID       int32  `protobuf:"varint,3,opt,name=PayID,proto3" json:"PayID,omitempty"`             // 商品ID
	PurchaseNum int32  `protobuf:"varint,4,opt,name=PurchaseNum,proto3" json:"PurchaseNum,omitempty"` // 购买个数
	OrderTime   int64  `protobuf:"varint,5,opt,name=OrderTime,proto3" json:"OrderTime,omitempty"`     // 下单时间
	Price       int32  `protobuf:"varint,6,opt,name=Price,proto3" json:"Price,omitempty"`             // 总价格(分)
	PlatformID  int32  `protobuf:"varint,7,opt,name=PlatformID,proto3" json:"PlatformID,omitempty"`   // 平台ID 1-Android 2-IOS
}

func (x *OrderReq) Reset() {
	*x = OrderReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Pluto_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderReq) ProtoMessage() {}

func (x *OrderReq) ProtoReflect() protoreflect.Message {
	mi := &file_Pluto_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderReq.ProtoReflect.Descriptor instead.
func (*OrderReq) Descriptor() ([]byte, []int) {
	return file_Pluto_proto_rawDescGZIP(), []int{18}
}

func (x *OrderReq) GetServerID() uint32 {
	if x != nil {
		return x.ServerID
	}
	return 0
}

func (x *OrderReq) GetUserID() uint64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *OrderReq) GetPayID() int32 {
	if x != nil {
		return x.PayID
	}
	return 0
}

func (x *OrderReq) GetPurchaseNum() int32 {
	if x != nil {
		return x.PurchaseNum
	}
	return 0
}

func (x *OrderReq) GetOrderTime() int64 {
	if x != nil {
		return x.OrderTime
	}
	return 0
}

func (x *OrderReq) GetPrice() int32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *OrderReq) GetPlatformID() int32 {
	if x != nil {
		return x.PlatformID
	}
	return 0
}

type OrderAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error       int32  `protobuf:"varint,1,opt,name=Error,proto3" json:"Error,omitempty"`             // 错误码
	OrderID     string `protobuf:"bytes,2,opt,name=OrderID,proto3" json:"OrderID,omitempty"`          // 订单号
	UserID      uint64 `protobuf:"varint,3,opt,name=UserID,proto3" json:"UserID,omitempty"`           // 玩家ID
	OrderTime   int64  `protobuf:"varint,4,opt,name=OrderTime,proto3" json:"OrderTime,omitempty"`     // 下单时间
	PayID       int32  `protobuf:"varint,5,opt,name=PayID,proto3" json:"PayID,omitempty"`             // 商品ID
	PurchaseNum int32  `protobuf:"varint,6,opt,name=PurchaseNum,proto3" json:"PurchaseNum,omitempty"` // 购买个数
	PlatformID  int32  `protobuf:"varint,7,opt,name=PlatformID,proto3" json:"PlatformID,omitempty"`   // 平台ID 1-Android 2-IOS
}

func (x *OrderAck) Reset() {
	*x = OrderAck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Pluto_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderAck) ProtoMessage() {}

func (x *OrderAck) ProtoReflect() protoreflect.Message {
	mi := &file_Pluto_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderAck.ProtoReflect.Descriptor instead.
func (*OrderAck) Descriptor() ([]byte, []int) {
	return file_Pluto_proto_rawDescGZIP(), []int{19}
}

func (x *OrderAck) GetError() int32 {
	if x != nil {
		return x.Error
	}
	return 0
}

func (x *OrderAck) GetOrderID() string {
	if x != nil {
		return x.OrderID
	}
	return ""
}

func (x *OrderAck) GetUserID() uint64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *OrderAck) GetOrderTime() int64 {
	if x != nil {
		return x.OrderTime
	}
	return 0
}

func (x *OrderAck) GetPayID() int32 {
	if x != nil {
		return x.PayID
	}
	return 0
}

func (x *OrderAck) GetPurchaseNum() int32 {
	if x != nil {
		return x.PurchaseNum
	}
	return 0
}

func (x *OrderAck) GetPlatformID() int32 {
	if x != nil {
		return x.PlatformID
	}
	return 0
}

type PayCallbackReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerID    uint32 `protobuf:"varint,1,opt,name=ServerID,proto3" json:"ServerID,omitempty"`       // 服务器ID
	UserID      uint64 `protobuf:"varint,2,opt,name=UserID,proto3" json:"UserID,omitempty"`           // 玩家ID
	PayID       int32  `protobuf:"varint,3,opt,name=PayID,proto3" json:"PayID,omitempty"`             // 商品ID
	PurchaseNum int32  `protobuf:"varint,4,opt,name=PurchaseNum,proto3" json:"PurchaseNum,omitempty"` // 购买个数
	OrderTime   int64  `protobuf:"varint,5,opt,name=OrderTime,proto3" json:"OrderTime,omitempty"`     // 下单时间
	PayAmount   int32  `protobuf:"varint,6,opt,name=PayAmount,proto3" json:"PayAmount,omitempty"`     // 支付金额
	OrderID     string `protobuf:"bytes,7,opt,name=OrderID,proto3" json:"OrderID,omitempty"`          // 订单号
	SDKOrderID  string `protobuf:"bytes,8,opt,name=SDKOrderID,proto3" json:"SDKOrderID,omitempty"`    // SDK订单号
}

func (x *PayCallbackReq) Reset() {
	*x = PayCallbackReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Pluto_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayCallbackReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayCallbackReq) ProtoMessage() {}

func (x *PayCallbackReq) ProtoReflect() protoreflect.Message {
	mi := &file_Pluto_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayCallbackReq.ProtoReflect.Descriptor instead.
func (*PayCallbackReq) Descriptor() ([]byte, []int) {
	return file_Pluto_proto_rawDescGZIP(), []int{20}
}

func (x *PayCallbackReq) GetServerID() uint32 {
	if x != nil {
		return x.ServerID
	}
	return 0
}

func (x *PayCallbackReq) GetUserID() uint64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *PayCallbackReq) GetPayID() int32 {
	if x != nil {
		return x.PayID
	}
	return 0
}

func (x *PayCallbackReq) GetPurchaseNum() int32 {
	if x != nil {
		return x.PurchaseNum
	}
	return 0
}

func (x *PayCallbackReq) GetOrderTime() int64 {
	if x != nil {
		return x.OrderTime
	}
	return 0
}

func (x *PayCallbackReq) GetPayAmount() int32 {
	if x != nil {
		return x.PayAmount
	}
	return 0
}

func (x *PayCallbackReq) GetOrderID() string {
	if x != nil {
		return x.OrderID
	}
	return ""
}

func (x *PayCallbackReq) GetSDKOrderID() string {
	if x != nil {
		return x.SDKOrderID
	}
	return ""
}

type PayCallbackAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error int32 `protobuf:"varint,1,opt,name=Error,proto3" json:"Error,omitempty"` // 错误码
}

func (x *PayCallbackAck) Reset() {
	*x = PayCallbackAck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Pluto_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayCallbackAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayCallbackAck) ProtoMessage() {}

func (x *PayCallbackAck) ProtoReflect() protoreflect.Message {
	mi := &file_Pluto_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayCallbackAck.ProtoReflect.Descriptor instead.
func (*PayCallbackAck) Descriptor() ([]byte, []int) {
	return file_Pluto_proto_rawDescGZIP(), []int{21}
}

func (x *PayCallbackAck) GetError() int32 {
	if x != nil {
		return x.Error
	}
	return 0
}

type TAEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimeStamp int64     `protobuf:"varint,1,opt,name=TimeStamp,proto3" json:"TimeStamp,omitempty"`
	Id        TA_ID     `protobuf:"varint,2,opt,name=Id,proto3,enum=Pluto.TA_ID" json:"Id,omitempty"`
	StrList   []string  `protobuf:"bytes,3,rep,name=StrList,proto3" json:"StrList,omitempty"`
	IntList   []int64   `protobuf:"varint,4,rep,packed,name=IntList,proto3" json:"IntList,omitempty"`
	FloatList []float64 `protobuf:"fixed64,5,rep,packed,name=FloatList,proto3" json:"FloatList,omitempty"`
}

func (x *TAEvent) Reset() {
	*x = TAEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Pluto_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TAEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TAEvent) ProtoMessage() {}

func (x *TAEvent) ProtoReflect() protoreflect.Message {
	mi := &file_Pluto_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TAEvent.ProtoReflect.Descriptor instead.
func (*TAEvent) Descriptor() ([]byte, []int) {
	return file_Pluto_proto_rawDescGZIP(), []int{22}
}

func (x *TAEvent) GetTimeStamp() int64 {
	if x != nil {
		return x.TimeStamp
	}
	return 0
}

func (x *TAEvent) GetId() TA_ID {
	if x != nil {
		return x.Id
	}
	return TA_ID_TA_NONE
}

func (x *TAEvent) GetStrList() []string {
	if x != nil {
		return x.StrList
	}
	return nil
}

func (x *TAEvent) GetIntList() []int64 {
	if x != nil {
		return x.IntList
	}
	return nil
}

func (x *TAEvent) GetFloatList() []float64 {
	if x != nil {
		return x.FloatList
	}
	return nil
}

type TAProperty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimeStamp int64   `protobuf:"varint,1,opt,name=TimeStamp,proto3" json:"TimeStamp,omitempty"`
	Id        TA_ID   `protobuf:"varint,2,opt,name=Id,proto3,enum=Pluto.TA_ID" json:"Id,omitempty"`
	IntVal    int64   `protobuf:"varint,3,opt,name=IntVal,proto3" json:"IntVal,omitempty"`
	FloatVal  float64 `protobuf:"fixed64,4,opt,name=FloatVal,proto3" json:"FloatVal,omitempty"`
	StrVal    string  `protobuf:"bytes,5,opt,name=StrVal,proto3" json:"StrVal,omitempty"`
}

func (x *TAProperty) Reset() {
	*x = TAProperty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Pluto_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TAProperty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TAProperty) ProtoMessage() {}

func (x *TAProperty) ProtoReflect() protoreflect.Message {
	mi := &file_Pluto_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TAProperty.ProtoReflect.Descriptor instead.
func (*TAProperty) Descriptor() ([]byte, []int) {
	return file_Pluto_proto_rawDescGZIP(), []int{23}
}

func (x *TAProperty) GetTimeStamp() int64 {
	if x != nil {
		return x.TimeStamp
	}
	return 0
}

func (x *TAProperty) GetId() TA_ID {
	if x != nil {
		return x.Id
	}
	return TA_ID_TA_NONE
}

func (x *TAProperty) GetIntVal() int64 {
	if x != nil {
		return x.IntVal
	}
	return 0
}

func (x *TAProperty) GetFloatVal() float64 {
	if x != nil {
		return x.FloatVal
	}
	return 0
}

func (x *TAProperty) GetStrVal() string {
	if x != nil {
		return x.StrVal
	}
	return ""
}

type TAStatListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID       uint64        `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	AccountID    string        `protobuf:"bytes,2,opt,name=AccountID,proto3" json:"AccountID,omitempty"`
	DistinctID   string        `protobuf:"bytes,3,opt,name=DistinctID,proto3" json:"DistinctID,omitempty"`
	Addr         uint32        `protobuf:"varint,4,opt,name=Addr,proto3" json:"Addr,omitempty"`
	EventList    []*TAEvent    `protobuf:"bytes,5,rep,name=EventList,proto3" json:"EventList,omitempty"`
	PropertyList []*TAProperty `protobuf:"bytes,6,rep,name=PropertyList,proto3" json:"PropertyList,omitempty"`
}

func (x *TAStatListReq) Reset() {
	*x = TAStatListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Pluto_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TAStatListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TAStatListReq) ProtoMessage() {}

func (x *TAStatListReq) ProtoReflect() protoreflect.Message {
	mi := &file_Pluto_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TAStatListReq.ProtoReflect.Descriptor instead.
func (*TAStatListReq) Descriptor() ([]byte, []int) {
	return file_Pluto_proto_rawDescGZIP(), []int{24}
}

func (x *TAStatListReq) GetUserID() uint64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *TAStatListReq) GetAccountID() string {
	if x != nil {
		return x.AccountID
	}
	return ""
}

func (x *TAStatListReq) GetDistinctID() string {
	if x != nil {
		return x.DistinctID
	}
	return ""
}

func (x *TAStatListReq) GetAddr() uint32 {
	if x != nil {
		return x.Addr
	}
	return 0
}

func (x *TAStatListReq) GetEventList() []*TAEvent {
	if x != nil {
		return x.EventList
	}
	return nil
}

func (x *TAStatListReq) GetPropertyList() []*TAProperty {
	if x != nil {
		return x.PropertyList
	}
	return nil
}

var File_Pluto_proto protoreflect.FileDescriptor

var file_Pluto_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x50, 0x6c, 0x75, 0x74, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x50,
	0x6c, 0x75, 0x74, 0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x2d, 0x0a, 0x0f, 0x50, 0x6c, 0x75, 0x74, 0x6f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52,
	0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x44, 0x22, 0x41,
	0x0a, 0x0f, 0x50, 0x6c, 0x75, 0x74, 0x6f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x41, 0x63,
	0x6b, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49,
	0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49,
	0x44, 0x22, 0x49, 0x0a, 0x0f, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a,
	0x62, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x5f, 0x0a, 0x0f,
	0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x63, 0x6b, 0x12,
	0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1e, 0x0a,
	0x0a, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x2d, 0x0a,
	0x13, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x61, 0x6e,
	0x6b, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x43, 0x0a, 0x13,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x61, 0x6e, 0x6b,
	0x41, 0x63, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x22, 0xe2, 0x01, 0x0a, 0x10, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1a,
	0x0a, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x6f,
	0x6c, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x67, 0x6f, 0x6c, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x77, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x45, 0x78, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x77, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x45, 0x78, 0x70, 0x12, 0x18, 0x0a, 0x07,
	0x64, 0x69, 0x61, 0x6d, 0x6f, 0x6e, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x64,
	0x69, 0x61, 0x6d, 0x6f, 0x6e, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x15, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x6c,
	0x69, 0x6e, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x22, 0x54, 0x0a,
	0x13, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x73, 0x41, 0x63, 0x6b, 0x12, 0x3d, 0x0a, 0x0d, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x50, 0x6c,
	0x75, 0x74, 0x6f, 0x2e, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0d, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x73, 0x22, 0x3d, 0x0a, 0x09, 0x41, 0x77, 0x61, 0x72, 0x64, 0x49, 0x74, 0x65, 0x6d,
	0x12, 0x16, 0x0a, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d,
	0x4e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x4e,
	0x75, 0x6d, 0x22, 0xde, 0x01, 0x0a, 0x0a, 0x4e, 0x65, 0x77, 0x4d, 0x61, 0x69, 0x6c, 0x52, 0x65,
	0x71, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x20, 0x0a,
	0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x04,
	0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x73, 0x12, 0x28, 0x0a, 0x06, 0x61, 0x77, 0x61,
	0x72, 0x64, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x50, 0x6c, 0x75, 0x74,
	0x6f, 0x2e, 0x41, 0x77, 0x61, 0x72, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x06, 0x61, 0x77, 0x61,
	0x72, 0x64, 0x73, 0x22, 0x0c, 0x0a, 0x0a, 0x4e, 0x65, 0x77, 0x4d, 0x61, 0x69, 0x6c, 0x41, 0x63,
	0x6b, 0x22, 0x38, 0x0a, 0x08, 0x43, 0x64, 0x6b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a,
	0x05, 0x43, 0x44, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x43, 0x44,
	0x4b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x92, 0x01, 0x0a, 0x08,
	0x43, 0x64, 0x6b, 0x65, 0x79, 0x41, 0x63, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x14,
	0x0a, 0x05, 0x43, 0x44, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x43,
	0x44, 0x4b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07,
	0x4b, 0x65, 0x79, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x4b,
	0x65, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x28, 0x0a, 0x06, 0x41, 0x77, 0x61, 0x72, 0x64, 0x73,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x50, 0x6c, 0x75, 0x74, 0x6f, 0x2e, 0x41,
	0x77, 0x61, 0x72, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x06, 0x41, 0x77, 0x61, 0x72, 0x64, 0x73,
	0x22, 0x48, 0x0a, 0x0c, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x52, 0x65, 0x71,
	0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09,
	0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x22, 0x0e, 0x0a, 0x0c, 0x4f, 0x6e,
	0x6c, 0x69, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x41, 0x63, 0x6b, 0x22, 0x7e, 0x0a, 0x0a, 0x50, 0x61,
	0x79, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x50, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02,
	0x49, 0x50, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x61, 0x79, 0x49, 0x44, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x50, 0x61, 0x79, 0x49, 0x44, 0x22, 0x0c, 0x0a, 0x0a, 0x50, 0x61,
	0x79, 0x53, 0x74, 0x61, 0x74, 0x41, 0x63, 0x6b, 0x22, 0xca, 0x01, 0x0a, 0x08, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49,
	0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x61, 0x79,
	0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x50, 0x61, 0x79, 0x49, 0x44, 0x12,
	0x20, 0x0a, 0x0b, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x4e, 0x75, 0x6d, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x4e, 0x75,
	0x6d, 0x12, 0x1c, 0x0a, 0x09, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x49, 0x44, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x50, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x49, 0x44, 0x22, 0xc8, 0x01, 0x0a, 0x08, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41,
	0x63, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x61, 0x79, 0x49,
	0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x50, 0x61, 0x79, 0x49, 0x44, 0x12, 0x20,
	0x0a, 0x0b, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x4e, 0x75, 0x6d, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0b, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x4e, 0x75, 0x6d,
	0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x44, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x44,
	0x22, 0xf2, 0x01, 0x0a, 0x0e, 0x50, 0x61, 0x79, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b,
	0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x44, 0x12,
	0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x61, 0x79, 0x49, 0x44,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x50, 0x61, 0x79, 0x49, 0x44, 0x12, 0x20, 0x0a,
	0x0b, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x4e, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0b, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x4e, 0x75, 0x6d, 0x12,
	0x1c, 0x0a, 0x09, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x50, 0x61, 0x79, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x50, 0x61, 0x79, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x49, 0x44, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x44, 0x4b, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x49, 0x44, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x53, 0x44, 0x4b, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x49, 0x44, 0x22, 0x26, 0x0a, 0x0e, 0x50, 0x61, 0x79, 0x43, 0x61, 0x6c, 0x6c,
	0x62, 0x61, 0x63, 0x6b, 0x41, 0x63, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x97, 0x01,
	0x0a, 0x07, 0x54, 0x41, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x69, 0x6d,
	0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x54, 0x69,
	0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1c, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x50, 0x6c, 0x75, 0x74, 0x6f, 0x2e, 0x54, 0x41, 0x5f, 0x49,
	0x44, 0x52, 0x02, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x74, 0x72, 0x4c, 0x69, 0x73, 0x74,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x53, 0x74, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x49, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x03,
	0x52, 0x07, 0x49, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x46, 0x6c, 0x6f,
	0x61, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x01, 0x52, 0x09, 0x46, 0x6c,
	0x6f, 0x61, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x94, 0x01, 0x0a, 0x0a, 0x54, 0x41, 0x50, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74,
	0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x53,
	0x74, 0x61, 0x6d, 0x70, 0x12, 0x1c, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0c, 0x2e, 0x50, 0x6c, 0x75, 0x74, 0x6f, 0x2e, 0x54, 0x41, 0x5f, 0x49, 0x44, 0x52, 0x02,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x49, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x49, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x6c,
	0x6f, 0x61, 0x74, 0x56, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x46, 0x6c,
	0x6f, 0x61, 0x74, 0x56, 0x61, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x72, 0x56, 0x61, 0x6c,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x74, 0x72, 0x56, 0x61, 0x6c, 0x22, 0xde,
	0x01, 0x0a, 0x0d, 0x54, 0x41, 0x53, 0x74, 0x61, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x44, 0x69, 0x73, 0x74, 0x69, 0x6e,
	0x63, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x44, 0x69, 0x73, 0x74,
	0x69, 0x6e, 0x63, 0x74, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x41, 0x64, 0x64, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x41, 0x64, 0x64, 0x72, 0x12, 0x2c, 0x0a, 0x09, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x50, 0x6c, 0x75, 0x74, 0x6f, 0x2e, 0x54, 0x41, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x09, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x50, 0x6c, 0x75, 0x74, 0x6f, 0x2e, 0x54, 0x41, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x79, 0x52, 0x0c, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x2a,
	0xb5, 0x04, 0x0a, 0x08, 0x50, 0x4c, 0x55, 0x54, 0x4f, 0x5f, 0x49, 0x44, 0x12, 0x0d, 0x0a, 0x09,
	0x50, 0x6c, 0x75, 0x74, 0x6f, 0x4e, 0x6f, 0x6e, 0x65, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0c, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x49, 0x44, 0x10, 0x91, 0x4e, 0x12, 0x11,
	0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x41, 0x63, 0x6b, 0x49, 0x44, 0x10, 0x92,
	0x4e, 0x12, 0x17, 0x0a, 0x11, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x49, 0x44, 0x10, 0xa0, 0x9c, 0x01, 0x12, 0x17, 0x0a, 0x11, 0x42, 0x61,
	0x6e, 0x6e, 0x65, 0x64, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x63, 0x6b, 0x49, 0x44, 0x10,
	0xa1, 0x9c, 0x01, 0x12, 0x17, 0x0a, 0x11, 0x47, 0x61, 0x67, 0x67, 0x65, 0x64, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x52, 0x65, 0x71, 0x49, 0x44, 0x10, 0xa2, 0x9c, 0x01, 0x12, 0x17, 0x0a, 0x11,
	0x47, 0x61, 0x67, 0x67, 0x65, 0x64, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x63, 0x6b, 0x49,
	0x44, 0x10, 0xa3, 0x9c, 0x01, 0x12, 0x1b, 0x0a, 0x15, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x49, 0x44, 0x10, 0xa4,
	0x9c, 0x01, 0x12, 0x1b, 0x0a, 0x15, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x52, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x6b, 0x49, 0x44, 0x10, 0xa5, 0x9c, 0x01, 0x12,
	0x1b, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x49, 0x44, 0x10, 0xa6, 0x9c, 0x01, 0x12, 0x1b, 0x0a, 0x15,
	0x47, 0x65, 0x74, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73,
	0x41, 0x63, 0x6b, 0x49, 0x44, 0x10, 0xa7, 0x9c, 0x01, 0x12, 0x12, 0x0a, 0x0c, 0x4e, 0x65, 0x77,
	0x4d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x49, 0x44, 0x10, 0xa8, 0x9c, 0x01, 0x12, 0x12, 0x0a,
	0x0c, 0x4e, 0x65, 0x77, 0x4d, 0x61, 0x69, 0x6c, 0x41, 0x63, 0x6b, 0x49, 0x44, 0x10, 0xa9, 0x9c,
	0x01, 0x12, 0x10, 0x0a, 0x0a, 0x43, 0x44, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x49, 0x44, 0x10,
	0xaa, 0x9c, 0x01, 0x12, 0x10, 0x0a, 0x0a, 0x43, 0x44, 0x4b, 0x65, 0x79, 0x41, 0x63, 0x6b, 0x49,
	0x44, 0x10, 0xab, 0x9c, 0x01, 0x12, 0x14, 0x0a, 0x0e, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x4e,
	0x75, 0x6d, 0x52, 0x65, 0x71, 0x49, 0x44, 0x10, 0x88, 0xa4, 0x01, 0x12, 0x14, 0x0a, 0x0e, 0x4f,
	0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x41, 0x63, 0x6b, 0x49, 0x44, 0x10, 0x89, 0xa4,
	0x01, 0x12, 0x13, 0x0a, 0x0d, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x71,
	0x49, 0x44, 0x10, 0x8a, 0xa4, 0x01, 0x12, 0x13, 0x0a, 0x0d, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x74,
	0x61, 0x74, 0x41, 0x63, 0x6b, 0x49, 0x44, 0x10, 0x8b, 0xa4, 0x01, 0x12, 0x12, 0x0a, 0x0c, 0x50,
	0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x71, 0x49, 0x44, 0x10, 0x8c, 0xa4, 0x01, 0x12,
	0x12, 0x0a, 0x0c, 0x50, 0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x41, 0x63, 0x6b, 0x49, 0x44, 0x10,
	0x8d, 0xa4, 0x01, 0x12, 0x10, 0x0a, 0x0a, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x49,
	0x44, 0x10, 0xf0, 0xab, 0x01, 0x12, 0x10, 0x0a, 0x0a, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x63,
	0x6b, 0x49, 0x44, 0x10, 0xf1, 0xab, 0x01, 0x12, 0x16, 0x0a, 0x10, 0x50, 0x61, 0x79, 0x43, 0x61,
	0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x49, 0x44, 0x10, 0xf2, 0xab, 0x01, 0x12,
	0x16, 0x0a, 0x10, 0x50, 0x61, 0x79, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x41, 0x63,
	0x6b, 0x49, 0x44, 0x10, 0xf3, 0xab, 0x01, 0x2a, 0xbb, 0x0a, 0x0a, 0x05, 0x54, 0x41, 0x5f, 0x49,
	0x44, 0x12, 0x0b, 0x0a, 0x07, 0x54, 0x41, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x1b,
	0x0a, 0x17, 0x54, 0x41, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54,
	0x45, 0x5f, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x54,
	0x41, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x5f, 0x52,
	0x4f, 0x4c, 0x45, 0x10, 0x02, 0x12, 0x12, 0x0a, 0x0e, 0x54, 0x41, 0x5f, 0x45, 0x56, 0x45, 0x4e,
	0x54, 0x5f, 0x4c, 0x4f, 0x47, 0x49, 0x4e, 0x10, 0x03, 0x12, 0x13, 0x0a, 0x0f, 0x54, 0x41, 0x5f,
	0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x4c, 0x4f, 0x47, 0x4f, 0x55, 0x54, 0x10, 0x04, 0x12, 0x19,
	0x0a, 0x15, 0x54, 0x41, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x47, 0x55, 0x49, 0x44, 0x45,
	0x5f, 0x46, 0x49, 0x4e, 0x49, 0x53, 0x48, 0x10, 0x64, 0x12, 0x15, 0x0a, 0x11, 0x54, 0x41, 0x5f,
	0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x5f, 0x55, 0x50, 0x10, 0x65,
	0x12, 0x24, 0x0a, 0x20, 0x54, 0x41, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x4d, 0x41, 0x49,
	0x4e, 0x5f, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x54, 0x5f, 0x42, 0x41,
	0x54, 0x54, 0x4c, 0x45, 0x10, 0x66, 0x12, 0x25, 0x0a, 0x21, 0x54, 0x41, 0x5f, 0x45, 0x56, 0x45,
	0x4e, 0x54, 0x5f, 0x4d, 0x41, 0x49, 0x4e, 0x5f, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x5f, 0x46, 0x49,
	0x4e, 0x49, 0x53, 0x48, 0x5f, 0x42, 0x41, 0x54, 0x54, 0x4c, 0x45, 0x10, 0x67, 0x12, 0x16, 0x0a,
	0x11, 0x54, 0x41, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x47, 0x45, 0x54, 0x5f, 0x49, 0x54,
	0x45, 0x4d, 0x10, 0xc8, 0x01, 0x12, 0x16, 0x0a, 0x11, 0x54, 0x41, 0x5f, 0x45, 0x56, 0x45, 0x4e,
	0x54, 0x5f, 0x55, 0x53, 0x45, 0x5f, 0x49, 0x54, 0x45, 0x4d, 0x10, 0xc9, 0x01, 0x12, 0x16, 0x0a,
	0x11, 0x54, 0x41, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x47, 0x45, 0x54, 0x5f, 0x47, 0x4f,
	0x4c, 0x44, 0x10, 0xca, 0x01, 0x12, 0x16, 0x0a, 0x11, 0x54, 0x41, 0x5f, 0x45, 0x56, 0x45, 0x4e,
	0x54, 0x5f, 0x55, 0x53, 0x45, 0x5f, 0x47, 0x4f, 0x4c, 0x44, 0x10, 0xcb, 0x01, 0x12, 0x19, 0x0a,
	0x14, 0x54, 0x41, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x47, 0x45, 0x54, 0x5f, 0x44, 0x49,
	0x41, 0x4d, 0x4f, 0x4e, 0x44, 0x10, 0xcc, 0x01, 0x12, 0x19, 0x0a, 0x14, 0x54, 0x41, 0x5f, 0x45,
	0x56, 0x45, 0x4e, 0x54, 0x5f, 0x55, 0x53, 0x45, 0x5f, 0x44, 0x49, 0x41, 0x4d, 0x4f, 0x4e, 0x44,
	0x10, 0xcd, 0x01, 0x12, 0x1a, 0x0a, 0x15, 0x54, 0x41, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f,
	0x47, 0x45, 0x54, 0x5f, 0x43, 0x55, 0x52, 0x52, 0x45, 0x4e, 0x43, 0x59, 0x10, 0xce, 0x01, 0x12,
	0x1a, 0x0a, 0x15, 0x54, 0x41, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x55, 0x53, 0x45, 0x5f,
	0x43, 0x55, 0x52, 0x52, 0x45, 0x4e, 0x43, 0x59, 0x10, 0xcf, 0x01, 0x12, 0x1a, 0x0a, 0x15, 0x54,
	0x41, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x5f, 0x47,
	0x55, 0x49, 0x4c, 0x44, 0x10, 0xac, 0x02, 0x12, 0x18, 0x0a, 0x13, 0x54, 0x41, 0x5f, 0x45, 0x56,
	0x45, 0x4e, 0x54, 0x5f, 0x4a, 0x4f, 0x49, 0x4e, 0x5f, 0x47, 0x55, 0x49, 0x4c, 0x44, 0x10, 0xad,
	0x02, 0x12, 0x18, 0x0a, 0x13, 0x54, 0x41, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x51, 0x55,
	0x49, 0x54, 0x5f, 0x47, 0x55, 0x49, 0x4c, 0x44, 0x10, 0xae, 0x02, 0x12, 0x1a, 0x0a, 0x15, 0x54,
	0x41, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x5f, 0x4f,
	0x52, 0x44, 0x45, 0x52, 0x10, 0x90, 0x03, 0x12, 0x1a, 0x0a, 0x15, 0x54, 0x41, 0x5f, 0x45, 0x56,
	0x45, 0x4e, 0x54, 0x5f, 0x46, 0x49, 0x4e, 0x49, 0x53, 0x48, 0x5f, 0x4f, 0x52, 0x44, 0x45, 0x52,
	0x10, 0x91, 0x03, 0x12, 0x18, 0x0a, 0x13, 0x54, 0x41, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f,
	0x47, 0x45, 0x54, 0x5f, 0x57, 0x45, 0x41, 0x50, 0x4f, 0x4e, 0x10, 0xf4, 0x03, 0x12, 0x1c, 0x0a,
	0x17, 0x54, 0x41, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x57, 0x45, 0x41, 0x50, 0x4f, 0x4e,
	0x5f, 0x53, 0x54, 0x41, 0x52, 0x5f, 0x55, 0x50, 0x10, 0xf5, 0x03, 0x12, 0x1c, 0x0a, 0x17, 0x54,
	0x41, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x57, 0x45, 0x41, 0x50, 0x4f, 0x4e, 0x5f, 0x52,
	0x41, 0x4e, 0x4b, 0x5f, 0x55, 0x50, 0x10, 0xf6, 0x03, 0x12, 0x1f, 0x0a, 0x1a, 0x54, 0x41, 0x5f,
	0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x4f, 0x50, 0x45, 0x4e, 0x5f, 0x57, 0x45, 0x41, 0x50, 0x4f,
	0x4e, 0x5f, 0x43, 0x48, 0x45, 0x53, 0x54, 0x10, 0xd8, 0x04, 0x12, 0x1b, 0x0a, 0x16, 0x54, 0x41,
	0x5f, 0x50, 0x52, 0x4f, 0x50, 0x45, 0x52, 0x54, 0x59, 0x5f, 0x4d, 0x41, 0x49, 0x4e, 0x5f, 0x4c,
	0x45, 0x56, 0x45, 0x4c, 0x10, 0xe8, 0x07, 0x12, 0x18, 0x0a, 0x13, 0x54, 0x41, 0x5f, 0x50, 0x52,
	0x4f, 0x50, 0x45, 0x52, 0x54, 0x59, 0x5f, 0x48, 0x45, 0x52, 0x4f, 0x5f, 0x43, 0x50, 0x10, 0xe9,
	0x07, 0x12, 0x1b, 0x0a, 0x16, 0x54, 0x41, 0x5f, 0x50, 0x52, 0x4f, 0x50, 0x45, 0x52, 0x54, 0x59,
	0x5f, 0x46, 0x52, 0x49, 0x45, 0x4e, 0x44, 0x5f, 0x4e, 0x55, 0x4d, 0x10, 0xea, 0x07, 0x12, 0x15,
	0x0a, 0x10, 0x54, 0x41, 0x5f, 0x50, 0x52, 0x4f, 0x50, 0x45, 0x52, 0x54, 0x59, 0x5f, 0x47, 0x4f,
	0x4c, 0x44, 0x10, 0xeb, 0x07, 0x12, 0x18, 0x0a, 0x13, 0x54, 0x41, 0x5f, 0x50, 0x52, 0x4f, 0x50,
	0x45, 0x52, 0x54, 0x59, 0x5f, 0x44, 0x49, 0x41, 0x4d, 0x4f, 0x4e, 0x44, 0x10, 0xec, 0x07, 0x12,
	0x1b, 0x0a, 0x16, 0x54, 0x41, 0x5f, 0x50, 0x52, 0x4f, 0x50, 0x45, 0x52, 0x54, 0x59, 0x5f, 0x55,
	0x53, 0x45, 0x52, 0x5f, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x10, 0xed, 0x07, 0x12, 0x1a, 0x0a, 0x15,
	0x54, 0x41, 0x5f, 0x50, 0x52, 0x4f, 0x50, 0x45, 0x52, 0x54, 0x59, 0x5f, 0x49, 0x54, 0x45, 0x4d,
	0x5f, 0x4c, 0x49, 0x53, 0x54, 0x10, 0xee, 0x07, 0x12, 0x1b, 0x0a, 0x16, 0x54, 0x41, 0x5f, 0x50,
	0x52, 0x4f, 0x50, 0x45, 0x52, 0x54, 0x59, 0x5f, 0x50, 0x41, 0x59, 0x5f, 0x41, 0x4d, 0x4f, 0x55,
	0x4e, 0x54, 0x10, 0xef, 0x07, 0x12, 0x1b, 0x0a, 0x16, 0x54, 0x41, 0x5f, 0x50, 0x52, 0x4f, 0x50,
	0x45, 0x52, 0x54, 0x59, 0x5f, 0x4c, 0x4f, 0x47, 0x49, 0x4e, 0x5f, 0x44, 0x41, 0x59, 0x53, 0x10,
	0xf0, 0x07, 0x12, 0x21, 0x0a, 0x1c, 0x54, 0x41, 0x5f, 0x50, 0x52, 0x4f, 0x50, 0x45, 0x52, 0x54,
	0x59, 0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x5f, 0x54, 0x49,
	0x4d, 0x45, 0x10, 0xf1, 0x07, 0x12, 0x24, 0x0a, 0x1f, 0x54, 0x41, 0x5f, 0x50, 0x52, 0x4f, 0x50,
	0x45, 0x52, 0x54, 0x59, 0x5f, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x43, 0x52, 0x45,
	0x41, 0x54, 0x45, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x10, 0xf2, 0x07, 0x12, 0x22, 0x0a, 0x1d, 0x54,
	0x41, 0x5f, 0x50, 0x52, 0x4f, 0x50, 0x45, 0x52, 0x54, 0x59, 0x5f, 0x46, 0x49, 0x52, 0x53, 0x54,
	0x5f, 0x43, 0x48, 0x41, 0x52, 0x47, 0x45, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x10, 0xf3, 0x07, 0x12,
	0x20, 0x0a, 0x1b, 0x54, 0x41, 0x5f, 0x50, 0x52, 0x4f, 0x50, 0x45, 0x52, 0x54, 0x59, 0x5f, 0x4c,
	0x41, 0x53, 0x54, 0x5f, 0x4c, 0x4f, 0x47, 0x49, 0x4e, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x10, 0xf4,
	0x07, 0x12, 0x21, 0x0a, 0x1c, 0x54, 0x41, 0x5f, 0x50, 0x52, 0x4f, 0x50, 0x45, 0x52, 0x54, 0x59,
	0x5f, 0x4c, 0x41, 0x53, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x52, 0x47, 0x45, 0x5f, 0x54, 0x49, 0x4d,
	0x45, 0x10, 0xf5, 0x07, 0x12, 0x1c, 0x0a, 0x17, 0x54, 0x41, 0x5f, 0x50, 0x52, 0x4f, 0x50, 0x45,
	0x52, 0x54, 0x59, 0x5f, 0x50, 0x4c, 0x41, 0x54, 0x46, 0x4f, 0x52, 0x4d, 0x5f, 0x49, 0x44, 0x10,
	0xf6, 0x07, 0x12, 0x1b, 0x0a, 0x16, 0x54, 0x41, 0x5f, 0x50, 0x52, 0x4f, 0x50, 0x45, 0x52, 0x54,
	0x59, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0xf7, 0x07, 0x12,
	0x24, 0x0a, 0x1f, 0x54, 0x41, 0x5f, 0x50, 0x52, 0x4f, 0x50, 0x45, 0x52, 0x54, 0x59, 0x5f, 0x46,
	0x49, 0x52, 0x53, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x52, 0x47, 0x45, 0x5f, 0x41, 0x4d, 0x4f, 0x55,
	0x4e, 0x54, 0x10, 0xf8, 0x07, 0x12, 0x1a, 0x0a, 0x15, 0x54, 0x41, 0x5f, 0x50, 0x52, 0x4f, 0x50,
	0x45, 0x52, 0x54, 0x59, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x45, 0x52, 0x5f, 0x49, 0x44, 0x10, 0xf9,
	0x07, 0x12, 0x1c, 0x0a, 0x17, 0x54, 0x41, 0x5f, 0x50, 0x52, 0x4f, 0x50, 0x45, 0x52, 0x54, 0x59,
	0x5f, 0x52, 0x45, 0x47, 0x49, 0x53, 0x54, 0x45, 0x52, 0x5f, 0x49, 0x50, 0x10, 0xfa, 0x07, 0x12,
	0x18, 0x0a, 0x13, 0x54, 0x41, 0x5f, 0x50, 0x52, 0x4f, 0x50, 0x45, 0x52, 0x54, 0x59, 0x5f, 0x55,
	0x53, 0x45, 0x52, 0x5f, 0x49, 0x44, 0x10, 0xfb, 0x07, 0x12, 0x1a, 0x0a, 0x15, 0x54, 0x41, 0x5f,
	0x50, 0x52, 0x4f, 0x50, 0x45, 0x52, 0x54, 0x59, 0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x4e, 0x41,
	0x4d, 0x45, 0x10, 0xfc, 0x07, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_Pluto_proto_rawDescOnce sync.Once
	file_Pluto_proto_rawDescData = file_Pluto_proto_rawDesc
)

func file_Pluto_proto_rawDescGZIP() []byte {
	file_Pluto_proto_rawDescOnce.Do(func() {
		file_Pluto_proto_rawDescData = protoimpl.X.CompressGZIP(file_Pluto_proto_rawDescData)
	})
	return file_Pluto_proto_rawDescData
}

var file_Pluto_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_Pluto_proto_msgTypes = make([]protoimpl.MessageInfo, 25)
var file_Pluto_proto_goTypes = []interface{}{
	(PLUTO_ID)(0),               // 0: Pluto.PLUTO_ID
	(TA_ID)(0),                  // 1: Pluto.TA_ID
	(*PlutoConnectReq)(nil),     // 2: Pluto.PlutoConnectReq
	(*PlutoConnectAck)(nil),     // 3: Pluto.PlutoConnectAck
	(*BannedPlayerReq)(nil),     // 4: Pluto.BannedPlayerReq
	(*BannedPlayerAck)(nil),     // 5: Pluto.BannedPlayerAck
	(*RemovePlayerRankReq)(nil), // 6: Pluto.RemovePlayerRankReq
	(*RemovePlayerRankAck)(nil), // 7: Pluto.RemovePlayerRankAck
	(*OnlinePlayerInfo)(nil),    // 8: Pluto.OnlinePlayerInfo
	(*GetOnlinePlayersReq)(nil), // 9: Pluto.GetOnlinePlayersReq
	(*GetOnlinePlayersAck)(nil), // 10: Pluto.GetOnlinePlayersAck
	(*AwardItem)(nil),           // 11: Pluto.AwardItem
	(*NewMailReq)(nil),          // 12: Pluto.NewMailReq
	(*NewMailAck)(nil),          // 13: Pluto.NewMailAck
	(*CdkeyReq)(nil),            // 14: Pluto.CdkeyReq
	(*CdkeyAck)(nil),            // 15: Pluto.CdkeyAck
	(*OnlineNumReq)(nil),        // 16: Pluto.OnlineNumReq
	(*OnlineNumAck)(nil),        // 17: Pluto.OnlineNumAck
	(*PayStatReq)(nil),          // 18: Pluto.PayStatReq
	(*PayStatAck)(nil),          // 19: Pluto.PayStatAck
	(*OrderReq)(nil),            // 20: Pluto.OrderReq
	(*OrderAck)(nil),            // 21: Pluto.OrderAck
	(*PayCallbackReq)(nil),      // 22: Pluto.PayCallbackReq
	(*PayCallbackAck)(nil),      // 23: Pluto.PayCallbackAck
	(*TAEvent)(nil),             // 24: Pluto.TAEvent
	(*TAProperty)(nil),          // 25: Pluto.TAProperty
	(*TAStatListReq)(nil),       // 26: Pluto.TAStatListReq
}
var file_Pluto_proto_depIdxs = []int32{
	8,  // 0: Pluto.GetOnlinePlayersAck.onlinePlayers:type_name -> Pluto.OnlinePlayerInfo
	11, // 1: Pluto.NewMailReq.awards:type_name -> Pluto.AwardItem
	11, // 2: Pluto.CdkeyAck.Awards:type_name -> Pluto.AwardItem
	1,  // 3: Pluto.TAEvent.Id:type_name -> Pluto.TA_ID
	1,  // 4: Pluto.TAProperty.Id:type_name -> Pluto.TA_ID
	24, // 5: Pluto.TAStatListReq.EventList:type_name -> Pluto.TAEvent
	25, // 6: Pluto.TAStatListReq.PropertyList:type_name -> Pluto.TAProperty
	7,  // [7:7] is the sub-list for method output_type
	7,  // [7:7] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_Pluto_proto_init() }
func file_Pluto_proto_init() {
	if File_Pluto_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_Pluto_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlutoConnectReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Pluto_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlutoConnectAck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Pluto_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BannedPlayerReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Pluto_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BannedPlayerAck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Pluto_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemovePlayerRankReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Pluto_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemovePlayerRankAck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Pluto_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnlinePlayerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Pluto_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOnlinePlayersReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Pluto_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOnlinePlayersAck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Pluto_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AwardItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Pluto_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewMailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Pluto_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewMailAck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Pluto_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CdkeyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Pluto_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CdkeyAck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Pluto_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnlineNumReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Pluto_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnlineNumAck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Pluto_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayStatReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Pluto_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayStatAck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Pluto_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Pluto_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderAck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Pluto_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayCallbackReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Pluto_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayCallbackAck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Pluto_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TAEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Pluto_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TAProperty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Pluto_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TAStatListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_Pluto_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   25,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_Pluto_proto_goTypes,
		DependencyIndexes: file_Pluto_proto_depIdxs,
		EnumInfos:         file_Pluto_proto_enumTypes,
		MessageInfos:      file_Pluto_proto_msgTypes,
	}.Build()
	File_Pluto_proto = out.File
	file_Pluto_proto_rawDesc = nil
	file_Pluto_proto_goTypes = nil
	file_Pluto_proto_depIdxs = nil
}
